#!/bin/bash
set -eu
set -o pipefail
source "config.ci"
BASE=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

CONTEXT="context"
CI_LOG=".artifacts/log"

DOCKERFILE="dockerfile/Dockerfile"

echo "CONTEXT:    ${CONTEXT}"
echo "DOCKERFILE: ${DOCKERFILE}"
echo "PLATFORMS:  ${PLATFORMS}"

if ! [[ -d ${CONTEXT} ]]
then
  printf -- "ERROR: missing context directory: %s ...\n" "${CONTEXT}"
  exit 100
fi

if ! [[ -s ${DOCKERFILE} ]]
then
  printf -- "ERROR: missing Dockerfile: %s ...\n" "${DOCKERFILE}"
  exit 100
fi

DOCKERIO=()
TAG=()

for tag in "${RELEASE}"
do
  if [[ -n ${DOCKER_IO_USER-} ]] && [[ -n ${DOCKER_IO_PATH-} ]] && [[ -z ${NODOCKERIO-} ]]
  then
    DOCKERIO+=( "${DOCKER_IO_PATH}/${NAME,,}:${tag}" )
    TAG+=( "-t" "${DOCKER_IO_PATH}/${NAME,,}:${tag}" )
  fi
done

printf -- "Building:\n"
for image in ${DOCKERIO[@]}
do
  printf -- " %s\n" "${image}"
done

[[ -z ${SKIPBUILD-} ]] || exit 0

ARGS=()
for arg in ${BUILD_ARGS-}
do
  export $arg
  ARGS+=( "--build-arg" "${arg}" )
done

exec 101>&1 102>&2
if [[ -z ${NOLOG-} ]]; then
  if ! mkdir -p "${CI_LOG}"; then
    printf -- "ERROR: Unable to create LOG directory ...\n"
    exit 100
  fi
  exec >"${CI_LOG}/build-${NAME,,}.txt" 2>&1
fi

rc=0
echo docker buildx build ${BUILDX_CONFIG[@]} ${TAG[@]} ${ARGS[@]} -f "${DOCKERFILE}" "${CONTEXT}" || rc=1
exec 1>&101 2>&102
if [[ ${rc} -eq 0 ]]
then
  shadow-text 0 "SUCCEEDED"
else
  shadow-text 6 "FAILED"
  exit 10
fi
